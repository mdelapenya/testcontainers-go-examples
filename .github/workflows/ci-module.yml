name: Run tests for the Go module
run-name: "${{ inputs.project-directory }} ${{ inputs.go-version }}"

on:
  workflow_call:
    inputs:
      go-version:
        required: true
        type: string
        description: "The version of Go to use for the test."
      fail-fast:
        required: false
        type: boolean
        default: true
        description: "Fail the workflow if any of the jobs fail."
      project-directory:
        required: true
        type: string
        default: "."
        description: "The directory where the Go project is located."

permissions:
  contents: read

jobs:
  test-go-project:
    name: "${{ inputs.project-directory }}/${{ inputs.go-version }}"
    runs-on: 'ubuntu-latest'
    continue-on-error: ${{ !inputs.fail-fast }}
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4

      - name: Set up Go
        uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5
        with:
            go-version: '${{ inputs.go-version }}'
            cache-dependency-path: '${{ inputs.project-directory }}/go.sum'
        id: go

      - name: modVerify
        working-directory: ${{ inputs.project-directory }}
        run: go mod verify

      - name: modTidy
        working-directory: ${{ inputs.project-directory }}
        run: go mod tidy

      - uses: robherley/go-test-action@v0
        with:
          # Relative path to the directory containing the go.mod of the module you wish to test.
          # Optional. Default is '.'
          moduleDirectory: ${{ inputs.project-directory }}

          # Arguments to pass to go test, -json will be prepended automatically.
          # Optional. Default is './...'
          testArguments: -v ./... -count=1
