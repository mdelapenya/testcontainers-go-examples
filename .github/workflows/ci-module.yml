name: Run tests for the Go module
run-name: "${{ inputs.project-directory }} ${{ inputs.go-version }}"

on:
  workflow_call:
    inputs:
      go-version:
        required: true
        type: string
        description: "The version of Go to use for the test."
      fail-fast:
        required: false
        type: boolean
        default: true
        description: "Fail the workflow if any of the jobs fail."
      project-directory:
        required: true
        type: string
        default: "."
        description: "The directory where the Go project is located."

permissions:
  contents: read

jobs:
  test-go-project:
    name: "${{ inputs.project-directory }}/${{ inputs.go-version }}"
    runs-on: 'ubuntu-latest'
    continue-on-error: ${{ !inputs.fail-fast }}
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4

      - name: Set up Go
        uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5
        with:
            go-version: '${{ inputs.go-version }}'
            cache-dependency-path: '${{ inputs.project-directory }}/go.sum'
        id: go

      - name: golangci-lint
        uses: golangci/golangci-lint-action@9d1e0624a798bb64f6c3cea93db47765312263dc # v5
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: v1.59.1
          # Optional: working directory, useful for monorepos
          working-directory: ${{ inputs.project-directory }}
          # Optional: golangci-lint command line arguments.
          args: --verbose
          # Optional: if set to true then the all caching functionality will be complete disabled,
          #           takes precedence over all other caching options.
          skip-cache: true

      - name: modVerify
        working-directory: ./${{ inputs.project-directory }}
        run: go mod verify

      - name: modTidy
        working-directory: ./${{ inputs.project-directory }}
        run: go mod tidy

      - name: ensure compilation
        working-directory: ./${{ inputs.project-directory }}
        run: go build

      - name: go test
        working-directory: ./${{ inputs.project-directory }}
        timeout-minutes: 30
        run: go test ./... -v -count=1

      - name: Test Summary
        uses: test-summary/action@032c8a9cec6aaa3c20228112cae6ca10a3b29336 # v2.3
        with:
            paths: "**/${{ inputs.project-directory }}/TEST-unit*.xml"
        if: always()
